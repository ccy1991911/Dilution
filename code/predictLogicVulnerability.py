import os
import sys
import copy

global ThirdPaymentBasicEdge

global SecurityRequirement
SecurityRequirement = {'alipay':{'验签':('支付通知', '支付宝公钥'), '金额':('实付金额', '订单金额'), '收款人': ('收款人', '收款人'), 'notify_id':('notify_id', 'notify_id')},'wechat':{'验签':('支付通知', '微信密钥'), '金额':('实付金额', '订单金额')}}

global Possesion
Possesion = {'syndicator':[], 'merchant':['支付宝公钥', '微信密钥']}

def readThirdPaymentBasicEdge(thirdPaymentName):

    file = open('../data/configure/edge.%s.txt'%thirdPaymentName)
    fileContent = file.readlines()
    file.close()

    global ThirdPaymentBasicEdge
    ThirdPaymentBasicEdge = {}

    edge_number = None
   
    for line in fileContent:
        if line.startswith('edge number:'):
            edge_number = int(line.split(':')[-1])
            ThirdPaymentBasicEdge[edge_number] = {}
        elif line.startswith('sender:'):
            ThirdPaymentBasicEdge[edge_number]['sender'] = line.split(':')[-1].strip()
        elif line.startswith('receiver:'):
            ThirdPaymentBasicEdge[edge_number]['receiver'] = line.split(':')[-1].strip()
        elif line.startswith('content:'):
            ThirdPaymentBasicEdge[edge_number]['content'] = line.split(':')[-1].strip()
        elif line.startswith('security requirement:'):
            ThirdPaymentBasicEdge[edge_number]['security requirement'] = ''
            if len(line.split(':')[-1].strip()) > 0:
                ThirdPaymentBasicEdge[edge_number]['security requirement'] = line.split(':')[-1].strip().split('|')
            
                
def readSyndicationDocumentationEdge(thirdPaymentName, syndicationName):
    
    file = open('../data/tmp/%s.%s.txt'%(syndicationName, thirdPaymentName))
    fileContent = file.readlines()
    file.close()
    
    global SyndicationDocumentationEdge
    SyndicationDocumentationEdge = {}
    
    edge_number = None
   
    for line in fileContent:
        if line.startswith('>> edge:'):
            edge_number = int(line.split(':')[-1])
            SyndicationDocumentationEdge[edge_number] = {}
            SyndicationDocumentationEdge[edge_number]['send parameter'] = ''
        elif line.startswith('sender:'):
            SyndicationDocumentationEdge[edge_number]['sender'] = line.split(':')[-1].strip()
        elif line.startswith('receiver:'):
            SyndicationDocumentationEdge[edge_number]['receiver'] = line.split(':')[-1].strip()
        elif line.startswith('edge number in knowledgebase:'):
            SyndicationDocumentationEdge[edge_number]['edge number in knowledgebase'] = line.split(':')[-1].strip()
        elif line.startswith('send parameter:'):
            SyndicationDocumentationEdge[edge_number]['send parameter'] = ''
            if len(line.split(':')[-1].strip()) > 0:
                SyndicationDocumentationEdge[edge_number]['send parameter'] = line.split(':')[-1].strip().split('|')
        elif line.startswith('security check:'):
            SyndicationDocumentationEdge[edge_number]['security check'] = ''
            if len(line.split(':')[-1].strip()) > 0:
                SyndicationDocumentationEdge[edge_number]['security check'] = line.split(':')[-1].strip().split('|')


def readPreconfigInformation(thirdPaymentName, syndicationName):
    
    file = open('../data/configure/preconfigure/%s.%s.txt'%(syndicationName, thirdPaymentName))
    fileContent = file.readlines()
    file.close()
    
    global Possesion
    for line in fileContent:
        Possesion['syndicator'].append(line.strip())
    
                
def identifyLogicVunlerability(thirdPaymentName):
    
    trust_party = ['商户服务器', '支付渠道','第四方服务器']
    
    receive_parameter = {'syndicator':[], 'merchant':[]}
    
    check_edge = None
    
    for id in SyndicationDocumentationEdge:
        if SyndicationDocumentationEdge[id]['receiver'] == '第四方服务器':
            if SyndicationDocumentationEdge[id]['sender'] in trust_party:
                receive_parameter['syndicator'].append(SyndicationDocumentationEdge[id]['send parameter'])
        if SyndicationDocumentationEdge[id]['receiver'] == '商户服务器':
            if SyndicationDocumentationEdge[id]['sender'] in trust_party:
                receive_parameter['merchant'].append(SyndicationDocumentationEdge[id]['send parameter'])
        if thirdPaymentName == 'alipay' and SyndicationDocumentationEdge[id]['edge number in knowledgebase'] in ['9', '10']:
            check_edge = id
        if thirdPaymentName == 'wechat' and SyndicationDocumentationEdge[id]['edge number in knowledgebase'] in ['9', '13']:
            check_edge = id

    visibility = {'syndicator': receive_parameter['syndicator'] + Possesion['syndicator'], 'merchant': receive_parameter['merchant'] + Possesion['merchant']}
            
    print('\nvisibility:', visibility, '\n')
    


    for security_requirement_name in SecurityRequirement[thirdPaymentName]:
        (obj, para) = SecurityRequirement[thirdPaymentName][security_requirement_name]
        print(obj, para)

        if (obj not in visibility['syndicator'] or para not in visibility['merchant']) and (obj not in visibility['merchant'] or para not in visibility['merchant']):
            print("[Design-level logic vulnerability] %s - %s\n"%(thirdPaymentName, security_requirement_name))
                
        if obj not in receive_parameter['syndicator'] and para not in receive_parameter['syndicator'] and obj in receive_parameter['merchant'] and para in receive_parameter['merchant']:
            if security_requirement_name not in SyndicationDocumentationEdge[check_edge]['security check']:
                print("[Implementation-level logic vulnerability] %s - %s in merchant\n"%(thirdPaymentName, security_requirement_name))

if __name__ == '__main__':
    
    thirdPaymentName = sys.argv[1]
    syndicationName = sys.argv[2]
    
    readThirdPaymentBasicEdge(thirdPaymentName)
    
    readPreconfigInformation(thirdPaymentName, syndicationName)
    print('Possesion:', Possesion, '\n')
    
    readSyndicationDocumentationEdge(thirdPaymentName, syndicationName)
    print(SyndicationDocumentationEdge)
    
    identifyLogicVunlerability(thirdPaymentName)